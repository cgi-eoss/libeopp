From 59c86bbf8ed1c7b46dc6826b0d6a99cbf73ad4b8 Mon Sep 17 00:00:00 2001
From: Eric Anderson <ejona@google.com>
Date: Tue, 5 Mar 2019 07:41:31 -0800
Subject: [PATCH] Workaround Bazel 0.23 incompatibility

--incompatible_generate_javacommon_source_jar was introduced in 0.22 and became
default in 0.23, but there isn't a way to support the old and new way at the
same time.

We generate a srcjar with the same lib${name}-src.jar, but now
java_common.compile is also producing a srcjar with that same name and causes a
conflict. This requires us to choose a different name for our srcjar, but any
existing users of the srcjar will break if on 0.22 and earlier (excepting they
specify the incompatible flag in 0.22) as the file name referenced is no longer
available. For such users, they will need to change their grpc version at the
same time as changing their Bazel version.

See #5395 and #5412
---
 java_grpc_library.bzl | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/java_grpc_library.bzl b/java_grpc_library.bzl
index 76264a0d25..5435e74373 100644
--- a/java_grpc_library.bzl
+++ b/java_grpc_library.bzl
@@ -91,7 +91,7 @@ _java_rpc_library = rule(
     fragments = ["java"],
     outputs = {
         "jar": "lib%{name}.jar",
-        "srcjar": "lib%{name}-src.jar",
+        "srcjar": "lib%{name}-source.jar",
     },
     provides = [JavaInfo],
     implementation = _java_rpc_library_impl,
