diff --git a/kt_jvm_grpc.bzl b/kt_jvm_grpc.bzl
index 99944eb..d33fb4b 100644
--- a/kt_jvm_grpc.bzl
+++ b/kt_jvm_grpc.bzl
@@ -1,4 +1,4 @@
-load("@io_bazel_rules_kotlin//kotlin:jvm.bzl", "kt_jvm_library")
+load("@rules_kotlin//kotlin:jvm.bzl", "kt_jvm_library")
 load("@io_grpc_grpc_java//:java_grpc_library.bzl", "java_grpc_library")
 
 def _invoke_generator(ctx, proto_dep, output_dir):
@@ -87,6 +87,7 @@ def kt_jvm_grpc_library(
         visibility = None,
         flavor = None,
         deprecation = None,
+        java_grpc_target = None,
         features = []):
     """This rule compiles Kotlin APIs for gRPC services from the proto_library in srcs.
 
@@ -117,6 +118,7 @@ def kt_jvm_grpc_library(
         fail("Expected exactly one dep", "deps")
 
     kt_deps.extend([
+        "@io_grpc_grpc_java//api",
         "@com_github_grpc_grpc_kotlin//stub/src/main/java/io/grpc/kotlin:stub",
         "@com_github_grpc_grpc_kotlin//stub/src/main/java/io/grpc/kotlin:context",
     ])
@@ -124,21 +126,24 @@ def kt_jvm_grpc_library(
     kt_grpc_label = ":%s_DO_NOT_DEPEND_kt_grpc" % name
     kt_grpc_name = kt_grpc_label[1:]
 
-    java_grpc_label = ":%s_DO_NOT_DEPEND_java_grpc" % name
-    java_grpc_name = java_grpc_label[1:]
+    if java_grpc_target == None:
+        java_grpc_label = ":%s_DO_NOT_DEPEND_java_grpc" % name
+        java_grpc_name = java_grpc_label[1:]
 
-    java_grpc_library(
-        name = java_grpc_name,
-        srcs = srcs,
-        deps = deps,
-        flavor = flavor,
-        compatible_with = compatible_with,
-        restricted_to = restricted_to,
-        testonly = testonly,
-        visibility = visibility,
-        deprecation = deprecation,
-        features = features,
-    )
+        java_grpc_library(
+            name = java_grpc_name,
+            srcs = srcs,
+            deps = deps,
+            flavor = flavor,
+            compatible_with = compatible_with,
+            restricted_to = restricted_to,
+            testonly = testonly,
+            visibility = visibility,
+            deprecation = deprecation,
+            features = features,
+        )
+    else:
+        java_grpc_label = java_grpc_target
     kt_deps.append(java_grpc_label)
 
     _kt_grpc_generate_code(
@@ -259,6 +264,7 @@ def kt_jvm_proto_library(
         visibility = None,
         flavor = None,
         deprecation = None,
+        java_proto_target = None,
         features = []):
     """
     This rule accepts any number of proto_library targets in "deps", translates them to Kotlin and
@@ -286,34 +292,35 @@ def kt_jvm_proto_library(
       deprecation: Standard attribute
       features: Standard attribute
     """
-    java_proto_target = ":%s_DO_NOT_DEPEND_java_proto" % name
-    helper_target = ":%s_DO_NOT_DEPEND_kt_proto" % name
-
-    if flavor == "lite":
-        native.java_lite_proto_library(
-            name = java_proto_target[1:],
-            deps = deps,
-            testonly = testonly,
-            compatible_with = compatible_with,
-            visibility = ["//visibility:private"],
-            restricted_to = restricted_to,
-            tags = tags,
-            deprecation = deprecation,
-            features = features,
-        )
-    else:
-        native.java_proto_library(
-            name = java_proto_target[1:],
-            deps = deps,
-            testonly = testonly,
-            compatible_with = compatible_with,
-            visibility = ["//visibility:private"],
-            restricted_to = restricted_to,
-            tags = tags,
-            deprecation = deprecation,
-            features = features,
-        )
+    if java_proto_target == None:
+        java_proto_target = ":%s_DO_NOT_DEPEND_java_proto" % name
+
+        if flavor == "lite":
+            native.java_lite_proto_library(
+                name = java_proto_target[1:],
+                deps = deps,
+                testonly = testonly,
+                compatible_with = compatible_with,
+                visibility = ["//visibility:private"],
+                restricted_to = restricted_to,
+                tags = tags,
+                deprecation = deprecation,
+                features = features,
+            )
+        else:
+            native.java_proto_library(
+                name = java_proto_target[1:],
+                deps = deps,
+                testonly = testonly,
+                compatible_with = compatible_with,
+                visibility = ["//visibility:private"],
+                restricted_to = restricted_to,
+                tags = tags,
+                deprecation = deprecation,
+                features = features,
+            )
 
+    helper_target = ":%s_DO_NOT_DEPEND_kt_proto" % name
     _kt_jvm_proto_library_helper(
         name = helper_target[1:],
         proto_deps = deps,
