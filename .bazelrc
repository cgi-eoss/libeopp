# Not all of our dependencies support bzlmod yet
common --noenable_bzlmod

# Always use hermetic_cc_toolchain
build --action_env BAZEL_DO_NOT_DETECT_CPP_TOOLCHAIN=1

build --action_env=http_proxy
build --action_env=https_proxy
build --action_env=no_proxy
build --action_env=HTTP_PROXY
build --action_env=HTTPS_PROXY
build --action_env=NO_PROXY
build --action_env=NPM_CONFIG_REGISTRY

# Use C++14 (for protobuf compatibility)
build --repo_env=BAZEL_CXXOPTS='-std=c++14'
build --action_env=BAZEL_CXXOPTS='-std=c++14'

build --java_language_version=21
build --tool_java_language_version=21

# Download a bazel-defined jdk21 for reproducible builds
build --java_runtime_version=remotejdk_21
build --tool_java_runtime_version=remotejdk_21

# To use a local jdk from $JAVA_HOME, add to .bazelrc.local and uncomment:
#build --java_runtime_version=local_jdk

# TODO Remove when https://github.com/salesforce/reactive-grpc/issues/294 is resolved
build --noincompatible_java_common_parameters
# TODO Remove when protobuf no longer passes obsolete values

# Prevent leaking Bazel test runner into IntellIJ classpath
build --explicit_java_test_deps

test --test_env=http_proxy
test --test_env=https_proxy
test --test_env=no_proxy
test --test_env=HTTP_PROXY
test --test_env=HTTPS_PROXY
test --test_env=NO_PROXY

coverage --collect_code_coverage
coverage --combined_report=lcov
coverage --coverage_report_generator=@bazel_sonarqube//:SonarQubeCoverageGenerator

try-import %workspace%/.bazelrc.local
